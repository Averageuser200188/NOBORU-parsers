BatoTo=Parser:new("Bato.TO","https://bato.to","DIF","BATODIF",2)BatoTo.Disabled=true;local function a(b)return b:gsub("&#([^;]-);",function(c)local d=tonumber("0"..c)or tonumber(c)return d and u8c(d)or"&#"..c..";"end):gsub("&(.-);",function(c)return HTML_entities and HTML_entities[c]and u8c(HTML_entities[c])or"&"..c..";"end)end;local function e(f)local g={}Threads.insertTask(g,{Type="StringRequest",Link=f,Table=g,Index="text"})while Threads.check(g)do coroutine.yield(false)end;return g.text or""end;local h={RUS="russian",ENG="english",BRA="brazilian",FRA="french",POL="polish",DEU="german",SPA="spanish",TUR="turkish",ITA="italian",VIE="vietnamese",PRT="portuguese"}local i={russia="RUS",england="ENG",mexico="MEX",brazil="BRA",france="FRA",poland="POL",spain="SPA",germany="DEU",turkey="TUR",italy="ITA",vietnam="VIE",portugal="PRT"}function BatoTo:getManga(f,j)local k;if f:find("latest")then k=e(f):match('id="series%-list"(.-)class="footer')or""else k=e(f):match('id="series%-list"(.-)class="browse%-pager"')or""end;j.NoPages=true;for l in k:gmatch(' item (.-)class="col%-24')do local m=not l:find("no%-flag")local n="england"if m then n=l:match('flag_(.-)"')end;ImageLink,Link,Name=l:match('cover.-src="//([^"]-)".-item%-text.-href="([^"]-)"[^>]->(.-)</a>')Name=Name:gsub("<.->","")local o=CreateManga(a(Name),Link,ImageLink,self.ID,self.Link..Link)if o and(i[n]==Settings.ParserLanguage or Settings.ParserLanguage=="DIF")then if Settings.ParserLanguage=="DIF"then o.Name="["..(i[n]or n:sub(0,3):upper()).."] "..o.Name end;j[#j+1]=o end;j.NoPages=false;coroutine.yield(false)end end;function BatoTo:getLatestManga(p,j)local q=""if Settings.ParserLanguage~="DIF"and h[Settings.ParserLanguage]then q="&langs="..h[Settings.ParserLanguage]end;self:getManga(self.Link.."/latest?page="..p..q,j)end;function BatoTo:getPopularManga(p,j)local q=""if Settings.ParserLanguage~="DIF"and h[Settings.ParserLanguage]then q="&langs="..h[Settings.ParserLanguage]end;self:getManga(self.Link.."/browse?page="..p..q,j)end;function BatoTo:searchManga(r,p,j)self:getManga(self.Link.."/search?q="..r.."&p="..p,j)end;function BatoTo:getChapters(o,j)local k=e(self.Link..o.Link)local s={}for Link,Name in k:gmatch('chapt" href="([^"]-)">.-<b>(.-)</a>')do Name=Name:gsub("\n%s*(.-)\n%s*"," %1")Name=a(Name):gsub("<.->","")s[#s+1]={Name=Name:gsub(" %- Read Online",""),Link=Link,Pages={},Manga=o}end;for t=#s,1,-1 do j[#j+1]=s[t]end end;function BatoTo:prepareChapter(u,j)local k=e(self.Link..u.Link)for Link in k:gmatch('"%d-":"([^"]-)"')do j[#j+1]=Link end end;function BatoTo:loadChapterPage(f,j)j.Link=f end