MangaDex=Parser:new("MangaDex","https://mangadex.org","DIF","MANGADEX",8)MangaDex.Filters={{Name="Original Language",Type="radio",Tags={"All languages","Japanese","English","Polish","Russian","German","French","Vietnamese","Chinese","Indonesian","Korean","Spanish (LATAM)","Thai","Filipino","Chinese (Trad)"}},{Name="Demographic",Type="check",Tags={"Shounen","Shoujo","Seinen","Josei"},Default={"Shounen","Shoujo","Seinen","Josei"}},{Name="Publication Status",Type="check",Tags={"Ongoing","Completed","Cancelled","Hiatus"},Default={"Ongoing","Completed","Cancelled","Hiatus"}},{Name="Content",Type="checkcross",Tags={"Ecchi","Gore","Sexual Violence","Smut"}},{Name="Format",Type="checkcross",Tags={"4-Koma","Adaptation","Anthology","Award Winning","Doujinshi","Fan Colored","Full Color","Long Strip","Official Colored","Oneshot","User Created","Web Comic"}},{Name="Genre",Type="checkcross",Tags={"Action","Adventure","Comedy","Crime","Drama","Fantasy","Historical","Horror","Isekai","Magical Girls","Mecha","Medical","Mystery","Philosophical","Psychological","Romance","Sci-Fi","Shoujo Ai","Shounen Ai","Slice of Life","Sports","Superhero","Thriller","Tragedy","Wuxia","Yaoi","Yuri"}},{Name="Theme",Type="checkcross",Tags={"Aliens","Animals","Cooking","Crossdressing","Delinquents","Demons","Genderswap","Ghosts","Gyaru","Harem","Incest","Loli","Mafia","Magic","Martial Arts","Military","Monster Girls","Monsters","Music","Ninja","Office Workers","Police","Post-Apocalyptic","Reincarnation","Reverse Harem","Samurai","School Life","Shota","Supernatural","Survival","Time Travel","Traditional Games","Vampires","Video Games","Virtual Reality","Zombies"}},{Name="Tag inclusion mode",Type="radio",Tags={"All (AND)","Any (OR)"},Default="All (AND)"},{Name="Tag exclusion mode",Type="radio",Tags={"All (AND)","Any (OR)"},Default="Any (OR)"}}MangaDex.LangKeys={["All languages"]="",["Japanese"]="2",["English"]="1",["Polish"]="3",["Russian"]="7",["German"]="8",["French"]="10",["Vietnamese"]="12",["Chinese"]="21",["Indonesian"]="27",["Korean"]="28",["Spanish (LATAM)"]="29",["Thai"]="32",["Filipino"]="34",["Chinese (Trad)"]="35"}MangaDex.DemoKeys={["Shounen"]="1",["Shoujo"]="2",["Seinen"]="3",["Josei"]="4"}MangaDex.PSKeys={["Ongoing"]="1",["Completed"]="2",["Cancelled"]="3",["Hiatus"]="4"}MangaDex.Keys={["Ecchi"]="9",["Gore"]="49",["Sexual Violence"]="50",["Smut"]="32",["4-Koma"]="1",["Adaptation"]="42",["Anthology"]="43",["Award Winning"]="4",["Doujinshi"]="7",["Fan Colored"]="48",["Full Color"]="45",["Long Strip"]="36",["Official Colored"]="47",["Oneshot"]="21",["User Created"]="46",["Web Comic"]="44",["Action"]="2",["Adventure"]="3",["Comedy"]="5",["Crime"]="51",["Drama"]="8",["Fantasy"]="10",["Historical"]="13",["Horror"]="14",["Isekai"]="41",["Magical Girls"]="52",["Mecha"]="17",["Medical"]="18",["Mystery"]="20",["Philosophical"]="53",["Psychological"]="22",["Romance"]="23",["Sci-Fi"]="25",["Shoujo Ai"]="28",["Shounen Ai"]="30",["Slice of Life"]="31",["Sports"]="33",["Superhero"]="54",["Thriller"]="55",["Tragedy"]="35",["Wuxia"]="56",["Yaoi"]="37",["Yuri"]="38",["Aliens"]="57",["Animals"]="58",["Cooking"]="6",["Crossdressing"]="59",["Delinquents"]="61",["Demons"]="60",["Genderswap"]="62",["Ghosts"]="63",["Gyaru"]="11",["Harem"]="12",["Incest"]="83",["Loli"]="65",["Mafia"]="84",["Magic"]="66",["Martial Arts"]="16",["Military"]="67",["Monster Girls"]="64",["Monsters"]="68",["Music"]="19",["Ninja"]="69",["Office Workers"]="70",["Police"]="71",["Post-Apocalyptic"]="72",["Reincarnation"]="73",["Reverse Harem"]="74",["Samurai"]="75",["School Life"]="24",["Shota"]="76",["Supernatural"]="34",["Survival"]="77",["Time Travel"]="78",["Traditional Games"]="80",["Vampires"]="79",["Video Games"]="40",["Virtual Reality"]="81",["Zombies"]="82"}MangaDex.TagMode={["All (AND)"]="all",["Any (OR)"]="any"}local a="/api/manga/"local b="/api/chapter/"local c={["bg"]="Bulgaria",["br"]="Brazil",["ct"]="Catalan",["de"]="German",["es"]="Spanish",["fr"]="French",["gb"]="English",["id"]="Indonesian",["it"]="Italian",["mx"]="Mexican",["pl"]="PL",["ru"]="Russian",["sa"]="SA",["vn"]="Vietnamese",["tr"]="Turkish",["ua"]="Ukrainian"}local d={["bg"]="BGR",["br"]="BRA",["ct"]="CAT",["de"]="DEU",["es"]="SPA",["fr"]="FRA",["gb"]="ENG",["id"]="IND",["it"]="ITA",["mx"]="MEX",["pl"]="PL",["ru"]="RUS",["sa"]="SA",["vn"]="VIE",["tr"]="TUR",["ua"]="UKR"}local function e(string)return string:gsub("&#([^;]-);",function(f)local g=tonumber("0"..f)or tonumber(f)return g and u8c(g)or"&#"..f..";"end):gsub("&(.-);",function(f)return HTML_entities and HTML_entities[f]and u8c(HTML_entities[f])or"&"..f..";"end)end;local function h(i)local j={}Threads.insertTask(j,{Type="StringRequest",Link=i,Table=j,Index="string"})while Threads.check(j)do coroutine.yield(false)end;return j.string or""end;function MangaDex:getManga(i,k)local l=h(i)k.NoPages=true;for m,n,o in l:gmatch('<a href="([^"]-)"><img.-src="([^"]-)".-class.->([^>]-)</a>')do k[#k+1]=CreateManga(e(o),m:match("/(%d-)/"),self.Link..n,self.ID,self.Link..m)k.NoPages=false;coroutine.yield(false)end end;function MangaDex:getPopularManga(p,k)self:getManga(self.Link.."/titles/7/"..p.."/",k)end;function MangaDex:getLatestManga(p,k)self:getManga(self.Link.."/titles/0/"..p.."/",k)end;local q={}function MangaDex:searchManga(r,p,k,s)local t=r:match("^id%+?:%+?(%d-)$")if Browser==nil or t then if Browser==nil and not t then Notifications.push("Search isn't supported in your NOBORU version\nbut you can write and id to search type 'id:12345'",2000)k.NoPages=true end;if t then local l=h(self.Link..a..t):gsub("\\/","/")local u,v=l:match('"cover_url":"(.-)",.-"title":"(.-)",')if v and u then k[#k+1]=CreateManga(e(v),t,self.Link..u,self.ID,self.Link.."/title/"..r)end end;k.NoPages=true else q=Browser.getCookies("mangadex.org")if h({Link=self.Link.."/search?p=0&title=ABADBEEFISMAGIC",Cookie=q["@"],Header1="User-Agent: "..Browser.getUserAgent()}):find('id="login_button".-id="forgot_button"')then q={}end;if#q==0 then Browser.open(self.Link.."/login")coroutine.yield(false)end;q=Browser.getCookies("mangadex.org")if#q~=0 then local w=""if s then local x=self.LangKeys[s["Original Language"]]local y=s["Demographic"]local z=s["Publication Status"]local l=s["Content"]local A=s["Format"]local B=s["Genre"]local C=s["Theme"]local D=s["Tag inclusion mode"]local E=s["Tag exclusion mode"]if x~=""then w=w.."&lang_id="..x end;if y and#y<4 then w=w.."&demos="local F={}for G,H in ipairs(y)do F[#F+1]=self.DemoKeys[H]end;w=w..table.concat(F,",")end;if z and#z<4 then w=w.."&statuses="local I={}for G,H in ipairs(z)do I[#I+1]=self.PSKeys[H]end;w=w..table.concat(I,",")end;local J={}for K,H in ipairs({l,A,B,C})do for L,M in ipairs(H.include)do J[#J+1]=self.Keys[M]end;for L,M in ipairs(H.exclude)do J[#J+1]="-"..self.Keys[M]end end;w=w.."&tags="..table.concat(J,",")w=w.."&tag_mode_exc="..self.TagMode[E].."&tag_mode_inc="..self.TagMode[D]end;self:getManga({Link=self.Link.."/search?p="..p.."&title="..r..w,Cookie=q["@"],Header1="User-Agent: "..Browser.getUserAgent()},k)else k.NoPages=true end end end;function MangaDex:getChapters(N,k)local l=h(self.Link..a..N.Link)N.NewImageLink=l:match('<img class="rounded"[^>]- src="(.-)"')local M={}local L=0;local O=false;N.Name=e(l:match('<span class="mx%-1">(.-)</span>')or N.Name)if Settings.ParserLanguage and Settings.ParserLanguage~="DIF"then O=Settings.ParserLanguage end;local P=false;for Q,R,S,T,U in l:gmatch('"(%d-)":{"volume":"(.-)","chapter":"(.-)","title":"(.-)",[^}]-"lang_code":"([^"]-)",.-}')do if O and d[U]==O or not O then M[#M+1]={Id=Q,Count=S,Title=T,Lang=U}M[#M].Volume=tonumber(R)or 0;if L>100 then coroutine.yield(false)L=0 else L=L+1 end end;P=true end;if P and#M==0 and O then Notifications.push("No chapters for preferred Language")end;table.sort(M,function(f,V)if f.Lang==V.Lang then local W,X=tonumber(f.Count),tonumber(V.Count)if W and X then return W>X elseif W then return true elseif X then return false end else return f.Lang>V.Lang end end)if not u8c then Notifications.push("Download Latest version to support \\u chars")end;for K=#M,1,-1 do local Y=M[K].Title:gsub('\\"','"')if u8c then Y=Y:gsub("\\u(....)",function(f)return u8c(tonumber(string.format("0x%s",f)))end)end;k[#k+1]={Name=e("["..(c[M[K].Lang]or M[K].Lang).."] "..M[K].Volume.."-"..M[K].Count..": "..Y),Link=M[K].Id,Pages={},Manga=N}end end;function MangaDex:prepareChapter(Z,k)local l=h(self.Link..b..Z.Link)for _,a0,a1 in l:gmatch('"hash":"(.-)",.-"server":"(.-)","page_array":%[(.-)%]')do a0=a0:gsub("\\/","/")for a2 in a1:gmatch('"(.-)"')do k[#k+1]=a0 .._.."/"..a2 end end end;function MangaDex:loadChapterPage(i,k)k.Link=i end